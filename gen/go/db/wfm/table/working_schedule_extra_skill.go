//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var WorkingScheduleExtraSkill = newWorkingScheduleExtraSkillTable("wfm", "working_schedule_extra_skill", "")

type workingScheduleExtraSkillTable struct {
	postgres.Table

	// Columns
	ID                postgres.ColumnInteger
	DomainID          postgres.ColumnInteger
	WorkingScheduleID postgres.ColumnInteger
	SkillID           postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type WorkingScheduleExtraSkillTable struct {
	workingScheduleExtraSkillTable

	EXCLUDED workingScheduleExtraSkillTable
}

// AS creates new WorkingScheduleExtraSkillTable with assigned alias
func (a WorkingScheduleExtraSkillTable) AS(alias string) *WorkingScheduleExtraSkillTable {
	return newWorkingScheduleExtraSkillTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WorkingScheduleExtraSkillTable with assigned schema name
func (a WorkingScheduleExtraSkillTable) FromSchema(schemaName string) *WorkingScheduleExtraSkillTable {
	return newWorkingScheduleExtraSkillTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new WorkingScheduleExtraSkillTable with assigned table prefix
func (a WorkingScheduleExtraSkillTable) WithPrefix(prefix string) *WorkingScheduleExtraSkillTable {
	return newWorkingScheduleExtraSkillTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new WorkingScheduleExtraSkillTable with assigned table suffix
func (a WorkingScheduleExtraSkillTable) WithSuffix(suffix string) *WorkingScheduleExtraSkillTable {
	return newWorkingScheduleExtraSkillTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newWorkingScheduleExtraSkillTable(schemaName, tableName, alias string) *WorkingScheduleExtraSkillTable {
	return &WorkingScheduleExtraSkillTable{
		workingScheduleExtraSkillTable: newWorkingScheduleExtraSkillTableImpl(schemaName, tableName, alias),
		EXCLUDED:                       newWorkingScheduleExtraSkillTableImpl("", "excluded", ""),
	}
}

func newWorkingScheduleExtraSkillTableImpl(schemaName, tableName, alias string) workingScheduleExtraSkillTable {
	var (
		IDColumn                = postgres.IntegerColumn("id")
		DomainIDColumn          = postgres.IntegerColumn("domain_id")
		WorkingScheduleIDColumn = postgres.IntegerColumn("working_schedule_id")
		SkillIDColumn           = postgres.IntegerColumn("skill_id")
		allColumns              = postgres.ColumnList{IDColumn, DomainIDColumn, WorkingScheduleIDColumn, SkillIDColumn}
		mutableColumns          = postgres.ColumnList{DomainIDColumn, WorkingScheduleIDColumn, SkillIDColumn}
		defaultColumns          = postgres.ColumnList{IDColumn}
	)

	return workingScheduleExtraSkillTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                IDColumn,
		DomainID:          DomainIDColumn,
		WorkingScheduleID: WorkingScheduleIDColumn,
		SkillID:           SkillIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
