name: Deploy

on:
  workflow_call:
    secrets:
      host:
        required: true
        description: Remote host (IP or domain) where the build artifacts will be deployed

      user:
        required: true
        description: SSH username used to connect to the remote host

      private-key:
        required: true
        description: Private SSH key used for authentication with the remote host

    inputs:
      source:
        required: true
        description: Build artifact (e.g., .deb package) to be copied and installed on the remote host
        type: string

      service:
        required: true
        description: Systemd service to restart after the package is installed"
        type: string

      environment:
        description: Deployment environment (e.g., development, staging, production)
        required: true
        type: string

jobs:
  deploy:
    name: Deploy
    runs-on: [ arc-runner-set ]
    environment:
      name: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-packages

      - name: Copy build
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ inputs.host }}
          username: ${{ inputs.user }}
          key: ${{ inputs.private-key }}
          source: ${{ inputs.source }}
          target: ~/dist

      - name: Install package
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ inputs.host }}
          username: ${{ inputs.user }}
          key: ${{ inputs.private-key }}
          script: |
            sudo dpkg -i ~/dist/${{ inputs.source }}
            rm ~/dist/${{ inputs.source }}
            sudo systemctl restart ${{ inputs.service }}

      - name: Deploy artifact
        uses: ./.github/actions/deploy-build
        with:
          host: ${{ secrets.DEVELOPMENT_HOST }}
          user: ${{ secrets.SSH_USER }}
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: webitel-wfm-*.deb
          service: webitel-wfm