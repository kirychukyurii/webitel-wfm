name: Release

on:
  push:
    branches:
      - v*.* # Only release branches

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml

  check-latest:
    name: Check latest release
    runs-on: [ arc-runner-set ]
    outputs:
      latest: ${{ steps.check.outputs.latest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history so we can list branches

      - id: check
        name: For each git ref
        run: |
          current_branch="${GITHUB_REF#refs/heads/}"
          echo "Current branch: $current_branch"

          # Get all release branches sorted descending
          latest_branch=$(git for-each-ref --sort=-creatordate --format '%(refname:short)' 'refs/heads/v*.*' | head -n1)
          echo "Latest release branch: $latest_branch"

          if [[ "$current_branch" == "$latest_branch" ]]; then
            echo "latest=true" >> "$GITHUB_OUTPUT"
          fi

  # If it is the latest release - deploy it to stage environment.
  deploy:
    name: Staging
    if: needs.check-latest.outputs.latest == 'true'
    needs: [ build, check-latest ]
    runs-on: [ arc-runner-set ]
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy artifact
        uses: ./.github/actions/deploy-build
        with:
          host: ${{ vars.HOST_IP }}
          user: development
          private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: webitel-wfm-*.deb
          service: webitel-wfm

  # We don't have a prod environment for each release,
  # so assume changes are tested.
  # Upload release to the repository.
  repository:
    name: Publish .deb package
    needs: [ build, deploy ]
    runs-on: [ arc-runner-set ]
    environment: release
    steps:
      - name: Publish build
        uses: ./.github/actions/upload-s3
        with:
          source: webitel-wfm-*.deb
          aws-bucket-name: webitel-deb-pkg
          aws-bucket-region: us-east-2
          aws-secret-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}