name: Build

on:
  pull_request:
  workflow_call:
    outputs:
      component:
        description: Extracted component
        value: ${{ jobs.version.outputs.component }}

jobs:
  version:
    name: Parse version
    runs-on: [ arc-runner-set ]
    outputs:
      version: ${{ steps.parse-version.outputs.WEBITEL_VERSION }}
      component: ${{ steps.parse-version.outputs.WEBITEL_DEB_COMPONENT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse version
        id: version
        uses: ./.github/actions/parse-version
        with:
          version-env-name: WEBITEL_VERSION
          component-env-name: WEBITEL_DEB_COMPONENT

  dependencies:
    name: Generate code
    runs-on: [ arc-runner-set ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download dependencies
        run: go mod download

      - name: Generate code
        run: go generate ./...

      - name: Upload artifacts
        uses: ./.github/actions/upload-generated
        with:
          wire: true

  lint:
    name: Lint code
    needs: [ dependencies ]
    runs-on: [ arc-runner-set ]
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download generated code
        uses: ./.github/actions/download-generated
        with:
          wire: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6.5.2
        with:
          install-mode: none
          problem-matchers: true
          skip-cache: true

  govulncheck:
    name: Check vulnerabilities
    needs: [ dependencies ]
    runs-on: [ arc-runner-set ]
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download generated code
        uses: ./.github/actions/download-generated
        with:
          wire: true

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run govulncheck and save to file
        run: govulncheck -C . -format sarif ./... > report.sarif

      - name: Upload to code-scanning
        uses: github/codeql-action/upload-sarif@28deaeda66b76a05916b6923827895f2b14ab387 # v3.28.16
        with:
          sarif_file: report.sarif

  test:
    name: Unit testing
    needs: [ dependencies ]
    runs-on: [ arc-runner-set ]
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download generated code
        uses: ./.github/actions/download-generated
        with:
          wire: true

      - name: Run all tests
        run: go test -short -v ./... | go run github.com/jstemmer/go-junit-report@latest -set-exit-code > report.xml

      - name: Test Summary
        if: always()
        uses: test-summary/action@v2.4
        with:
          paths: report.xml

  compile:
    name: Compile application
    needs: [ dependencies, version ]
    runs-on: [ arc-runner-set ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for the changelog to work correctly

      - name: Download generated code
        uses: ./.github/actions/download-generated
        with:
          wire: true

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ needs.prepare.outputs.version }}
        run: goreleaser release --clean --skip publish --skip validate

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-packages
          compression-level: 9
          path: dist/webitel-wfm-*.*
