name: build

on:
  pull_request:
  workflow_call:
    outputs:
      component:
        description: 'Extracted component'
        value: ${{ jobs.version.outputs.component }}

jobs:
  version:
    runs-on: [ arc-runner-set ]
    outputs:
      version: ${{ steps.parse-version.outputs.WEBITEL_VERSION }}
      component: ${{ steps.parse-version.outputs.WEBITEL_DEB_COMPONENT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse version
        id: version
        uses: ./.github/actions/parse-version
        with:
          version-env-name: WEBITEL_VERSION
          component-env-name: WEBITEL_DEB_COMPONENT

  dependencies:
    runs-on: [ arc-runner-set ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download dependencies
        run: go mod download

      - name: Generate code
        run: go generate ./...

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: generated-code-go
          compression-level: 9
          path: gen/go

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: generated-code-wire
          compression-level: 9
          path: cmd/wire_gen.go

#  analyze:
#    needs: [ dependencies ]
#    runs-on: [ arc-runner-set ]
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          # We must fetch at least the immediate parents so that if this is
#          # a pull request, then we can checkout the head.
#          fetch-depth: 2
#
#      - name: Download generated code
#        uses: ./.github/actions/generated
#
#      # Initializes the CodeQL tools for scanning.
#      - name: Initialize CodeQL
#        uses: github/codeql-action/init@v3
#        with:
#          languages: "go"
#          # If you wish to specify custom queries, you can do so here or in a config file.
#          # By default, queries listed here will override any specified in a config file.
#          # Prefix the list here with "+" to use these queries and those in the config file.
#          # queries: ./path/to/local/query, your-org/your-repo/queries@main
#
#      - name: Perform CodeQL Analysis
#        uses: github/codeql-action/analyze@v3

  lint:
    needs: [ dependencies ]
    runs-on: [ arc-runner-set ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download generated code
        uses: ./.github/actions/generated

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6.5.2
        with:
          install-mode: none
          problem-matchers: true
          skip-cache: true

  test:
    needs: [ dependencies ]
    runs-on: [ arc-runner-set ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download generated code
        uses: ./.github/actions/generated

      - name: Run all tests
        run: go test -short -v ./... > test.log; exit ${PIPESTATUS[0]}

      - name: Pretty print tests running time
        run: grep --color=never -e '--- PASS:' -e '--- FAIL:' test.log | sed 's/[:()]//g' | awk '{print $2,$3,$4}' | sort -t' ' -nk3 -r | awk '{sum += $3; print $1,$2,$3,sum"s"}'

  compile:
    needs: [ dependencies, version ]
    runs-on: [ arc-runner-set ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for the changelog to work correctly

      - name: Download generated code
        uses: ./.github/actions/generated

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ needs.prepare.outputs.version }}
        run: goreleaser release --clean --skip publish --skip validate

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-packages
          compression-level: 9
          path: dist/webitel-wfm-*.*
