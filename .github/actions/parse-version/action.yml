name: Parse Version
description: Extract version information for GitHub Actions workflows

inputs:
  version-env-name:
    description: Name of the environment variable for version
    required: false
    default: VERSION

  component-env-name:
    description: Name of the environment variable for component
    required: false
    default: COMPONENT

  development-branch:
    description: Name of the development branch
    required: false
    default: main

  triggered-branch:
    description: Name of the triggered branch
    required: false
    default: ${{ github.ref_name }}

  build-number:
    description: Build number
    required: false
    default: ${{ github.run_number }}

outputs:
  version:
    description: Extracted version
    value: ${{ steps.parse-version.outputs.VERSION }}

  component:
    description: Extracted component
    value: ${{ steps.parse-version.outputs.COMPONENT }}

runs:
  using: composite
  steps:
    - name: Parse Version
      id: parse-version
      shell: bash
      env:
        VERSION_ENV_NAME: ${{ inputs.version-env-name }}
        COMPONENT_ENV_NAME: ${{ inputs.component-env-name }}
        DEVELOPMENT_BRANCH: ${{ inputs.development-branch }}
        TRIGGERED_BRANCH: ${{ inputs.triggered-branch }}
        BUILD_NUMBER: ${{ inputs.build-number }}
      run: |
        #!/bin/bash
        set -e
        
        # Function to extract development version
        extract_development() {
          local build_number="$1"
          local component="dev"
          local year=$(date +"%y")  # Get last two digits of the year
          local month=$(date +"%m") # Get month as number
          local month_without_leading_zero=$(echo "$month" | sed 's/^0//')  # Remove leading zero
        
          local version="v${year}.${month_without_leading_zero}-${component}.${build_number}"
        
          echo "$version" "$component"
        }
        
        # Function to extract release version
        extract_release() {
          local branch="$1"
          local build_number="$2"
          local component="${branch}-releases"
        
          # Remove 'v' prefix from branch name
          local branch_version="${branch#v}"
        
          # Split version by dot
          local year=$(echo "$branch_version" | cut -d '.' -f 1)
          local month=$(echo "$branch_version" | cut -d '.' -f 2)
        
          # Remove leading zero from month part
          local month_without_leading_zero=$(echo "$month" | sed 's/^0//')
        
          local version="v${year}.${month_without_leading_zero}-${build_number}"
        
          echo "$version" "$component"
        }
        
        # Main execution logic
        if [[ "$TRIGGERED_BRANCH" == "$DEVELOPMENT_BRANCH" ]]; then
          read version component < <(extract_development "$BUILD_NUMBER")
        else
          read version component < <(extract_release "$TRIGGERED_BRANCH" "$BUILD_NUMBER")
        fi
        
        echo "Extracted version: $version, component: $component"
        
        # Set outputs for GitHub Actions
        echo "${VERSION_ENV_NAME}=${version}" >> $GITHUB_ENV
        echo "${COMPONENT_ENV_NAME}=${component}" >> $GITHUB_ENV
        echo "${VERSION_ENV_NAME}=${version}" >> $GITHUB_OUTPUT
        echo "${COMPONENT_ENV_NAME}=${component}" >> $GITHUB_OUTPUT